[{"path":"http://aviral.io/rastr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aviral Goel. Author, maintainer.","code":""},{"path":"http://aviral.io/rastr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Goel (2023). rastr: R AST Processing Framework. R package version 0.1, http://aviral.io/rastr/.","code":"@Manual{,   title = {rastr: An R AST Processing Framework},   author = {Aviral Goel},   year = {2023},   note = {R package version 0.1},   url = {http://aviral.io/rastr/}, }"},{"path":"http://aviral.io/rastr/index.html","id":"rastr-","dir":"","previous_headings":"","what":"An R AST Processing Framework","title":"An R AST Processing Framework","text":"rastr library manipulating R code.","code":""},{"path":"http://aviral.io/rastr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R AST Processing Framework","text":"rastr active development. install directly GitHub.","code":"# install.packages(\"devtools\") devtools::install_github(\"aviralg/rastr\")"},{"path":"http://aviral.io/rastr/index.html","id":"issues-and-feature-requests","dir":"","previous_headings":"","what":"Issues and Feature Requests","title":"An R AST Processing Framework","text":"encounter issue feature request please open issue GitHub.","code":""},{"path":"http://aviral.io/rastr/reference/analyze.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze AST — analyze","title":"Analyze AST — analyze","text":"walk() performs depth-first traversal AST.","code":""},{"path":"http://aviral.io/rastr/reference/analyze.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze AST — analyze","text":"","code":"walk(   ast,   node = ast_root_get(ast),   state,   pre_op = NULL,   post_op = NULL,   pre_dlmtr = NULL,   post_dlmtr = NULL,   pre_bkt = NULL,   post_bkt = NULL,   pre_null = NULL,   post_null = NULL,   pre_lgl = NULL,   post_lgl = NULL,   pre_int = NULL,   post_int = NULL,   pre_dbl = NULL,   post_dbl = NULL,   pre_cpx = NULL,   post_cpx = NULL,   pre_chr = NULL,   post_chr = NULL,   pre_sym = NULL,   post_sym = NULL,   pre_blk = NULL,   post_blk = NULL,   pre_grp = NULL,   post_grp = NULL,   pre_nuop = NULL,   post_nuop = NULL,   pre_unop = NULL,   post_unop = NULL,   pre_binop = NULL,   post_binop = NULL,   pre_rlp = NULL,   post_rlp = NULL,   pre_wlp = NULL,   post_wlp = NULL,   pre_flp = NULL,   post_flp = NULL,   pre_icond = NULL,   post_icond = NULL,   pre_iecond = NULL,   post_iecond = NULL,   pre_fndefn = NULL,   post_fndefn = NULL,   pre_fncall = NULL,   post_fncall = NULL,   pre_sub = NULL,   post_sub = NULL,   pre_idx = NULL,   post_idx = NULL,   pre_aexpr = NULL,   post_aexpr = NULL,   pre_exprs = NULL,   post_exprs = NULL,   pre_pars = NULL,   post_pars = NULL,   pre_dpar = NULL,   post_dpar = NULL,   pre_ndpar = NULL,   post_ndpar = NULL,   pre_args = NULL,   post_args = NULL,   pre_narg = NULL,   post_narg = NULL,   pre_parg = NULL,   post_parg = NULL,   pre_cond = NULL,   post_cond = NULL,   pre_iter = NULL,   post_iter = NULL,   pre_pgm = NULL,   post_pgm = NULL,   pre_dlmtd = NULL,   post_dlmtd = NULL,   pre_msng = NULL,   post_msng = NULL,   pre_beg = NULL,   post_beg = NULL,   pre_end = NULL,   post_end = NULL,   pre_gap = NULL,   post_gap = NULL,   pre_loc = NULL,   post_loc = NULL )"},{"path":"http://aviral.io/rastr/reference/analyze.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze AST — analyze","text":"ast AST object node starting node traversal; defaults AST root state passed pre_* post_* functions sharing collecting analysis information pre_aexpr, pre_args, pre_beg, pre_binop, pre_bkt, pre_blk, pre_chr, pre_cond, pre_cpx, pre_dbl, pre_dlmtd, pre_dlmtr, pre_dpar, pre_end, pre_exprs, pre_flp, pre_fncall, pre_fndefn, pre_gap, pre_grp, pre_icond, pre_idx, pre_iecond, pre_int, pre_iter, pre_lgl, pre_loc, pre_msng, pre_narg, pre_ndpar, pre_null, pre_nuop, pre_op, pre_parg, pre_pars, pre_pgm, pre_rlp, pre_sub, pre_sym, pre_unop, pre_wlp functions called visiting node's children post_aexpr, post_args, post_beg, post_binop, post_bkt, post_blk, post_chr, post_cond, post_cpx, post_dbl, post_dlmtd, post_dlmtr, post_dpar, post_end, post_exprs, post_flp, post_fncall, post_fndefn, post_gap, post_grp, post_icond, post_idx, post_iecond, post_int, post_iter, post_lgl, post_msng, post_narg, post_ndpar, post_null, post_nuop, post_op, post_parg, post_pars, post_pgm, post_rlp, post_sub, post_sym, post_unop, post_wlp, post_loc functions called visiting node's children","code":""},{"path":"http://aviral.io/rastr/reference/ast.html","id":null,"dir":"Reference","previous_headings":"","what":"AST APIs — ast","title":"AST APIs — ast","text":"ast_new() instantiates new AST ast_id() returns unique id AST ast_size() returns number nodes AST ast_root_get() returns root node _NODE_. ast_root_set() sets new root deletes old root. ast_root_rep() sets new root returns old root.","code":""},{"path":"http://aviral.io/rastr/reference/ast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AST APIs — ast","text":"","code":"ast_new(capacity = 10000L)  ast_id(ast)  ast_size(ast)  ast_root_get(ast)  ast_root_rep(ast, root)  ast_root_set(ast, root)"},{"path":"http://aviral.io/rastr/reference/ast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AST APIs — ast","text":"capacity expected size AST; size increase dynamically nodes added ast AST object root Root node","code":""},{"path":"http://aviral.io/rastr/reference/convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert AST to SEXP, data frame, list and Graphviz Dot format — convert","title":"Convert AST to SEXP, data frame, list and Graphviz Dot format — convert","text":"to_sexp() turns AST R's AST representation. to_df() turns AST data frame. to_list() turns AST R list. to_dot() turns AST Graphviz's dot format.","code":""},{"path":"http://aviral.io/rastr/reference/convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert AST to SEXP, data frame, list and Graphviz Dot format — convert","text":"","code":"to_sexp(ast, node = ast_root_get(ast))  to_df(ast, node = ast_root_get(ast))  to_list(ast, node = ast_root_get(ast))  to_dot(ast, node = ast_root_get(ast))"},{"path":"http://aviral.io/rastr/reference/convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert AST to SEXP, data frame, list and Graphviz Dot format — convert","text":"ast AST object node Node exported; defaults AST root node","code":""},{"path":"http://aviral.io/rastr/reference/doc_aexpr.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query aexpr nodes — doc_aexpr","title":"Create and query aexpr nodes — doc_aexpr","text":"aexpr_new() instantiates new aexpr node. aexpr_type() checks node aexpr node. aexpr_<child>_get() returns <child> node aexpr. aexpr_<child>_set() sets new <child> deletes old <child>. aexpr_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_aexpr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query aexpr nodes — doc_aexpr","text":"","code":"aexpr_new(ast, ann, expr)  aexpr_type(ast, node)  aexpr_ann_get(ast, node)  aexpr_ann_rep(ast, node, ann)  aexpr_ann_set(ast, node, ann)  aexpr_expr_get(ast, node)  aexpr_expr_rep(ast, node, expr)  aexpr_expr_set(ast, node, expr)"},{"path":"http://aviral.io/rastr/reference/doc_aexpr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query aexpr nodes — doc_aexpr","text":"ast AST object ann ann node expr expr node node aexpr node","code":""},{"path":"http://aviral.io/rastr/reference/doc_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query args nodes — doc_args","title":"Create and query args nodes — doc_args","text":"args_new() instantiates new args node. args_type() checks node args node. args_seq_get() returns child nodes list. args_get() returns node position index. args_set() sets node position index deletes previous node. args_rep() sets node position index returns previous node. args_ins() inserts nodes starting position index.","code":""},{"path":"http://aviral.io/rastr/reference/doc_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query args nodes — doc_args","text":"","code":"args_new(ast, seq)  args_type(ast, node)  args_len_get(ast, node)  args_seq_get(ast, node)  args_get(ast, node, index)  args_rep(ast, node, index, arg)  args_arg_set(ast, node, index, arg)  args_ins(ast, node, index, seq)"},{"path":"http://aviral.io/rastr/reference/doc_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query args nodes — doc_args","text":"ast AST object seq list child nodes node args node index one-based index args node","code":""},{"path":"http://aviral.io/rastr/reference/doc_beg.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query beg nodes — doc_beg","title":"Create and query beg nodes — doc_beg","text":"beg_new() instantiates new beg node. beg_type() checks node beg node. beg_<child>_get() returns <child> node beg. beg_<child>_set() sets new <child> deletes old <child>. beg_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_beg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query beg nodes — doc_beg","text":"","code":"beg_type(ast, node)  beg_bom_get(ast, node)  beg_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_beg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query beg nodes — doc_beg","text":"ast AST object node beg node","code":""},{"path":"http://aviral.io/rastr/reference/doc_binop.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query binop nodes — doc_binop","title":"Create and query binop nodes — doc_binop","text":"binop_new() instantiates new binop node. binop_type() checks node binop node. binop_<child>_get() returns <child> node binop. binop_<child>_set() sets new <child> deletes old <child>. binop_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_binop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query binop nodes — doc_binop","text":"","code":"binop_new(ast, lexpr, op, rexpr)  binop_type(ast, node)  binop_lexpr_get(ast, node)  binop_lexpr_rep(ast, node, lexpr)  binop_lexpr_set(ast, node, lexpr)  binop_op_get(ast, node)  binop_op_rep(ast, node, op)  binop_op_set(ast, node, op)  binop_rexpr_get(ast, node)  binop_rexpr_rep(ast, node, rexpr)  binop_rexpr_set(ast, node, rexpr)"},{"path":"http://aviral.io/rastr/reference/doc_binop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query binop nodes — doc_binop","text":"ast AST object lexpr lexpr node op op node rexpr rexpr node node binop node","code":""},{"path":"http://aviral.io/rastr/reference/doc_bkt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query bkt nodes — doc_bkt","title":"Create and query bkt nodes — doc_bkt","text":"bkt_new() instantiates new bkt node. bkt_type() checks node bkt node. bkt_<child>_get() returns <child> node bkt. bkt_<child>_set() sets new <child> deletes old <child>. bkt_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_bkt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query bkt nodes — doc_bkt","text":"","code":"bkt_type(ast, node)  bkt_gap_get(ast, node)  bkt_gap_rep(ast, node, gap)  bkt_gap_set(ast, node, gap)  bkt_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_bkt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query bkt nodes — doc_bkt","text":"ast AST object node bkt node gap gap node","code":""},{"path":"http://aviral.io/rastr/reference/doc_blk.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query blk nodes — doc_blk","title":"Create and query blk nodes — doc_blk","text":"blk_new() instantiates new blk node. blk_type() checks node blk node. blk_<child>_get() returns <child> node blk. blk_<child>_set() sets new <child> deletes old <child>. blk_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_blk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query blk nodes — doc_blk","text":"","code":"blk_new(ast, lbkt, exprs, rbkt)  blk_type(ast, node)  blk_lbkt_get(ast, node)  blk_lbkt_rep(ast, node, lbkt)  blk_lbkt_set(ast, node, lbkt)  blk_exprs_get(ast, node)  blk_exprs_rep(ast, node, exprs)  blk_exprs_set(ast, node, exprs)  blk_rbkt_get(ast, node)  blk_rbkt_rep(ast, node, rbkt)  blk_rbkt_set(ast, node, rbkt)"},{"path":"http://aviral.io/rastr/reference/doc_blk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query blk nodes — doc_blk","text":"ast AST object lbkt lbkt node exprs exprs node rbkt rbkt node node blk node","code":""},{"path":"http://aviral.io/rastr/reference/doc_chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query chr nodes — doc_chr","title":"Create and query chr nodes — doc_chr","text":"chr_new() instantiates new chr node. chr_type() checks node chr node. chr_<child>_get() returns <child> node chr. chr_<child>_set() sets new <child> deletes old <child>. chr_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query chr nodes — doc_chr","text":"","code":"chr_type(ast, node)  chr_syn_get(ast, node)  chr_val_get(ast, node)  chr_gap_get(ast, node)  chr_gap_rep(ast, node, gap)  chr_gap_set(ast, node, gap)  chr_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_chr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query chr nodes — doc_chr","text":"ast AST object node chr node gap gap node","code":""},{"path":"http://aviral.io/rastr/reference/doc_cond.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query cond nodes — doc_cond","title":"Create and query cond nodes — doc_cond","text":"cond_new() instantiates new cond node. cond_type() checks node cond node. cond_<child>_get() returns <child> node cond. cond_<child>_set() sets new <child> deletes old <child>. cond_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query cond nodes — doc_cond","text":"","code":"cond_new(ast, lbkt, expr, rbkt)  cond_type(ast, node)  cond_lbkt_get(ast, node)  cond_lbkt_rep(ast, node, lbkt)  cond_lbkt_set(ast, node, lbkt)  cond_expr_get(ast, node)  cond_expr_rep(ast, node, expr)  cond_expr_set(ast, node, expr)  cond_rbkt_get(ast, node)  cond_rbkt_rep(ast, node, rbkt)  cond_rbkt_set(ast, node, rbkt)"},{"path":"http://aviral.io/rastr/reference/doc_cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query cond nodes — doc_cond","text":"ast AST object lbkt lbkt node expr expr node rbkt rbkt node node cond node","code":""},{"path":"http://aviral.io/rastr/reference/doc_cpx.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query cpx nodes — doc_cpx","title":"Create and query cpx nodes — doc_cpx","text":"cpx_new() instantiates new cpx node. cpx_type() checks node cpx node. cpx_<child>_get() returns <child> node cpx. cpx_<child>_set() sets new <child> deletes old <child>. cpx_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_cpx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query cpx nodes — doc_cpx","text":"","code":"cpx_type(ast, node)  cpx_syn_get(ast, node)  cpx_val_get(ast, node)  cpx_gap_get(ast, node)  cpx_gap_rep(ast, node, gap)  cpx_gap_set(ast, node, gap)  cpx_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_cpx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query cpx nodes — doc_cpx","text":"ast AST object node cpx node gap gap node","code":""},{"path":"http://aviral.io/rastr/reference/doc_dbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query dbl nodes — doc_dbl","title":"Create and query dbl nodes — doc_dbl","text":"dbl_new() instantiates new dbl node. dbl_type() checks node dbl node. dbl_<child>_get() returns <child> node dbl. dbl_<child>_set() sets new <child> deletes old <child>. dbl_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_dbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query dbl nodes — doc_dbl","text":"","code":"dbl_type(ast, node)  dbl_syn_get(ast, node)  dbl_val_get(ast, node)  dbl_gap_get(ast, node)  dbl_gap_rep(ast, node, gap)  dbl_gap_set(ast, node, gap)  dbl_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_dbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query dbl nodes — doc_dbl","text":"ast AST object node dbl node gap gap node","code":""},{"path":"http://aviral.io/rastr/reference/doc_dlmtd.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query dlmtd nodes — doc_dlmtd","title":"Create and query dlmtd nodes — doc_dlmtd","text":"dlmtd_new() instantiates new dlmtd node. dlmtd_type() checks node dlmtd node. dlmtd_<child>_get() returns <child> node dlmtd. dlmtd_<child>_set() sets new <child> deletes old <child>. dlmtd_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_dlmtd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query dlmtd nodes — doc_dlmtd","text":"","code":"dlmtd_new(ast, expr, dlmtr)  dlmtd_type(ast, node)  dlmtd_expr_get(ast, node)  dlmtd_expr_rep(ast, node, expr)  dlmtd_expr_set(ast, node, expr)  dlmtd_dlmtr_get(ast, node)  dlmtd_dlmtr_rep(ast, node, dlmtr)  dlmtd_dlmtr_set(ast, node, dlmtr)"},{"path":"http://aviral.io/rastr/reference/doc_dlmtd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query dlmtd nodes — doc_dlmtd","text":"ast AST object expr expr node dlmtr dlmtr node node dlmtd node","code":""},{"path":"http://aviral.io/rastr/reference/doc_dlmtr.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query dlmtr nodes — doc_dlmtr","title":"Create and query dlmtr nodes — doc_dlmtr","text":"dlmtr_new() instantiates new dlmtr node. dlmtr_type() checks node dlmtr node. dlmtr_<child>_get() returns <child> node dlmtr. dlmtr_<child>_set() sets new <child> deletes old <child>. dlmtr_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_dlmtr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query dlmtr nodes — doc_dlmtr","text":"","code":"dlmtr_type(ast, node)  dlmtr_gap_get(ast, node)  dlmtr_gap_rep(ast, node, gap)  dlmtr_gap_set(ast, node, gap)  dlmtr_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_dlmtr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query dlmtr nodes — doc_dlmtr","text":"ast AST object node dlmtr node gap gap node","code":""},{"path":"http://aviral.io/rastr/reference/doc_dpar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query dpar nodes — doc_dpar","title":"Create and query dpar nodes — doc_dpar","text":"dpar_new() instantiates new dpar node. dpar_type() checks node dpar node. dpar_<child>_get() returns <child> node dpar. dpar_<child>_set() sets new <child> deletes old <child>. dpar_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_dpar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query dpar nodes — doc_dpar","text":"","code":"dpar_new(ast, name, op, expr)  dpar_type(ast, node)  dpar_name_get(ast, node)  dpar_name_rep(ast, node, name)  dpar_name_set(ast, node, name)  dpar_op_get(ast, node)  dpar_op_rep(ast, node, op)  dpar_op_set(ast, node, op)  dpar_expr_get(ast, node)  dpar_expr_rep(ast, node, expr)  dpar_expr_set(ast, node, expr)"},{"path":"http://aviral.io/rastr/reference/doc_dpar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query dpar nodes — doc_dpar","text":"ast AST object name name node op op node expr expr node node dpar node","code":""},{"path":"http://aviral.io/rastr/reference/doc_end.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query end nodes — doc_end","title":"Create and query end nodes — doc_end","text":"end_new() instantiates new end node. end_type() checks node end node. end_<child>_get() returns <child> node end. end_<child>_set() sets new <child> deletes old <child>. end_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_end.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query end nodes — doc_end","text":"","code":"end_new(ast, gap, loc)  end_type(ast, node)  end_gap_get(ast, node)  end_gap_rep(ast, node, gap)  end_gap_set(ast, node, gap)  end_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_end.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query end nodes — doc_end","text":"ast AST object gap gap node node end node","code":""},{"path":"http://aviral.io/rastr/reference/doc_err.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query err nodes — doc_err","title":"Create and query err nodes — doc_err","text":"err_new() instantiates new err node. err_type() checks node err node. err_<child>_get() returns <child> node err. err_<child>_set() sets new <child> deletes old <child>. err_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_err.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query err nodes — doc_err","text":"","code":"err_type(ast, node)  err_msg_get(ast, node)  err_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_err.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query err nodes — doc_err","text":"ast AST object node err node","code":""},{"path":"http://aviral.io/rastr/reference/doc_exprs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query exprs nodes — doc_exprs","title":"Create and query exprs nodes — doc_exprs","text":"exprs_new() instantiates new exprs node. exprs_type() checks node exprs node. exprs_seq_get() returns child nodes list. exprs_get() returns node position index. exprs_set() sets node position index deletes previous node. exprs_rep() sets node position index returns previous node. exprs_ins() inserts nodes starting position index.","code":""},{"path":"http://aviral.io/rastr/reference/doc_exprs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query exprs nodes — doc_exprs","text":"","code":"exprs_new(ast, seq)  exprs_type(ast, node)  exprs_len_get(ast, node)  exprs_seq_get(ast, node)  exprs_get(ast, node, index)  exprs_rep(ast, node, index, expr)  exprs_expr_set(ast, node, index, expr)  exprs_ins(ast, node, index, seq)"},{"path":"http://aviral.io/rastr/reference/doc_exprs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query exprs nodes — doc_exprs","text":"ast AST object seq list child nodes node exprs node index one-based index exprs node","code":""},{"path":"http://aviral.io/rastr/reference/doc_flp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query flp nodes — doc_flp","title":"Create and query flp nodes — doc_flp","text":"flp_new() instantiates new flp node. flp_type() checks node flp node. flp_<child>_get() returns <child> node flp. flp_<child>_set() sets new <child> deletes old <child>. flp_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_flp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query flp nodes — doc_flp","text":"","code":"flp_new(ast, op, iter, body)  flp_type(ast, node)  flp_op_get(ast, node)  flp_op_rep(ast, node, op)  flp_op_set(ast, node, op)  flp_iter_get(ast, node)  flp_iter_rep(ast, node, iter)  flp_iter_set(ast, node, iter)  flp_body_get(ast, node)  flp_body_rep(ast, node, body)  flp_body_set(ast, node, body)"},{"path":"http://aviral.io/rastr/reference/doc_flp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query flp nodes — doc_flp","text":"ast AST object op op node iter iter node body body node node flp node","code":""},{"path":"http://aviral.io/rastr/reference/doc_fncall.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query fncall nodes — doc_fncall","title":"Create and query fncall nodes — doc_fncall","text":"fncall_new() instantiates new fncall node. fncall_type() checks node fncall node. fncall_<child>_get() returns <child> node fncall. fncall_<child>_set() sets new <child> deletes old <child>. fncall_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_fncall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query fncall nodes — doc_fncall","text":"","code":"fncall_new(ast, fn, lbkt, args, rbkt)  fncall_type(ast, node)  fncall_fn_get(ast, node)  fncall_fn_rep(ast, node, fn)  fncall_fn_set(ast, node, fn)  fncall_lbkt_get(ast, node)  fncall_lbkt_rep(ast, node, lbkt)  fncall_lbkt_set(ast, node, lbkt)  fncall_args_get(ast, node)  fncall_args_rep(ast, node, args)  fncall_args_set(ast, node, args)  fncall_rbkt_get(ast, node)  fncall_rbkt_rep(ast, node, rbkt)  fncall_rbkt_set(ast, node, rbkt)"},{"path":"http://aviral.io/rastr/reference/doc_fncall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query fncall nodes — doc_fncall","text":"ast AST object fn fn node lbkt lbkt node args args node rbkt rbkt node node fncall node","code":""},{"path":"http://aviral.io/rastr/reference/doc_fndefn.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query fndefn nodes — doc_fndefn","title":"Create and query fndefn nodes — doc_fndefn","text":"fndefn_new() instantiates new fndefn node. fndefn_type() checks node fndefn node. fndefn_<child>_get() returns <child> node fndefn. fndefn_<child>_set() sets new <child> deletes old <child>. fndefn_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_fndefn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query fndefn nodes — doc_fndefn","text":"","code":"fndefn_new(ast, op, lbkt, pars, rbkt, body)  fndefn_type(ast, node)  fndefn_op_get(ast, node)  fndefn_op_rep(ast, node, op)  fndefn_op_set(ast, node, op)  fndefn_lbkt_get(ast, node)  fndefn_lbkt_rep(ast, node, lbkt)  fndefn_lbkt_set(ast, node, lbkt)  fndefn_pars_get(ast, node)  fndefn_pars_rep(ast, node, pars)  fndefn_pars_set(ast, node, pars)  fndefn_rbkt_get(ast, node)  fndefn_rbkt_rep(ast, node, rbkt)  fndefn_rbkt_set(ast, node, rbkt)  fndefn_body_get(ast, node)  fndefn_body_rep(ast, node, body)  fndefn_body_set(ast, node, body)"},{"path":"http://aviral.io/rastr/reference/doc_fndefn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query fndefn nodes — doc_fndefn","text":"ast AST object op op node lbkt lbkt node pars pars node rbkt rbkt node body body node node fndefn node","code":""},{"path":"http://aviral.io/rastr/reference/doc_gap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query gap nodes — doc_gap","title":"Create and query gap nodes — doc_gap","text":"gap_new() instantiates new gap node. gap_type() checks node gap node. gap_<child>_get() returns <child> node gap. gap_<child>_set() sets new <child> deletes old <child>. gap_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_gap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query gap nodes — doc_gap","text":"","code":"gap_type(ast, node)  gap_val_get(ast, node)  gap_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_gap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query gap nodes — doc_gap","text":"ast AST object node gap node","code":""},{"path":"http://aviral.io/rastr/reference/doc_grp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query grp nodes — doc_grp","title":"Create and query grp nodes — doc_grp","text":"grp_new() instantiates new grp node. grp_type() checks node grp node. grp_<child>_get() returns <child> node grp. grp_<child>_set() sets new <child> deletes old <child>. grp_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_grp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query grp nodes — doc_grp","text":"","code":"grp_new(ast, lbkt, expr, rbkt)  grp_type(ast, node)  grp_lbkt_get(ast, node)  grp_lbkt_rep(ast, node, lbkt)  grp_lbkt_set(ast, node, lbkt)  grp_expr_get(ast, node)  grp_expr_rep(ast, node, expr)  grp_expr_set(ast, node, expr)  grp_rbkt_get(ast, node)  grp_rbkt_rep(ast, node, rbkt)  grp_rbkt_set(ast, node, rbkt)"},{"path":"http://aviral.io/rastr/reference/doc_grp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query grp nodes — doc_grp","text":"ast AST object lbkt lbkt node expr expr node rbkt rbkt node node grp node","code":""},{"path":"http://aviral.io/rastr/reference/doc_icond.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query icond nodes — doc_icond","title":"Create and query icond nodes — doc_icond","text":"icond_new() instantiates new icond node. icond_type() checks node icond node. icond_<child>_get() returns <child> node icond. icond_<child>_set() sets new <child> deletes old <child>. icond_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_icond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query icond nodes — doc_icond","text":"","code":"icond_new(ast, iop, cond, ibody)  icond_type(ast, node)  icond_iop_get(ast, node)  icond_iop_rep(ast, node, iop)  icond_iop_set(ast, node, iop)  icond_cond_get(ast, node)  icond_cond_rep(ast, node, cond)  icond_cond_set(ast, node, cond)  icond_ibody_get(ast, node)  icond_ibody_rep(ast, node, ibody)  icond_ibody_set(ast, node, ibody)"},{"path":"http://aviral.io/rastr/reference/doc_icond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query icond nodes — doc_icond","text":"ast AST object iop iop node cond cond node ibody ibody node node icond node","code":""},{"path":"http://aviral.io/rastr/reference/doc_idx.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query idx nodes — doc_idx","title":"Create and query idx nodes — doc_idx","text":"idx_new() instantiates new idx node. idx_type() checks node idx node. idx_<child>_get() returns <child> node idx. idx_<child>_set() sets new <child> deletes old <child>. idx_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_idx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query idx nodes — doc_idx","text":"","code":"idx_new(ast, obj, lbkt, args, rbkt1, rbkt2)  idx_type(ast, node)  idx_obj_get(ast, node)  idx_obj_rep(ast, node, obj)  idx_obj_set(ast, node, obj)  idx_lbkt_get(ast, node)  idx_lbkt_rep(ast, node, lbkt)  idx_lbkt_set(ast, node, lbkt)  idx_args_get(ast, node)  idx_args_rep(ast, node, args)  idx_args_set(ast, node, args)  idx_rbkt1_get(ast, node)  idx_rbkt1_rep(ast, node, rbkt1)  idx_rbkt1_set(ast, node, rbkt1)  idx_rbkt2_get(ast, node)  idx_rbkt2_rep(ast, node, rbkt2)  idx_rbkt2_set(ast, node, rbkt2)"},{"path":"http://aviral.io/rastr/reference/doc_idx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query idx nodes — doc_idx","text":"ast AST object obj obj node lbkt lbkt node args args node rbkt1 rbkt1 node rbkt2 rbkt2 node node idx node","code":""},{"path":"http://aviral.io/rastr/reference/doc_iecond.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query iecond nodes — doc_iecond","title":"Create and query iecond nodes — doc_iecond","text":"iecond_new() instantiates new iecond node. iecond_type() checks node iecond node. iecond_<child>_get() returns <child> node iecond. iecond_<child>_set() sets new <child> deletes old <child>. iecond_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_iecond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query iecond nodes — doc_iecond","text":"","code":"iecond_new(ast, iop, cond, ibody, eop, ebody)  iecond_type(ast, node)  iecond_iop_get(ast, node)  iecond_iop_rep(ast, node, iop)  iecond_iop_set(ast, node, iop)  iecond_cond_get(ast, node)  iecond_cond_rep(ast, node, cond)  iecond_cond_set(ast, node, cond)  iecond_ibody_get(ast, node)  iecond_ibody_rep(ast, node, ibody)  iecond_ibody_set(ast, node, ibody)  iecond_eop_get(ast, node)  iecond_eop_rep(ast, node, eop)  iecond_eop_set(ast, node, eop)  iecond_ebody_get(ast, node)  iecond_ebody_rep(ast, node, ebody)  iecond_ebody_set(ast, node, ebody)"},{"path":"http://aviral.io/rastr/reference/doc_iecond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query iecond nodes — doc_iecond","text":"ast AST object iop iop node cond cond node ibody ibody node eop eop node ebody ebody node node iecond node","code":""},{"path":"http://aviral.io/rastr/reference/doc_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query int nodes — doc_int","title":"Create and query int nodes — doc_int","text":"int_new() instantiates new int node. int_type() checks node int node. int_<child>_get() returns <child> node int. int_<child>_set() sets new <child> deletes old <child>. int_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query int nodes — doc_int","text":"","code":"int_type(ast, node)  int_syn_get(ast, node)  int_val_get(ast, node)  int_gap_get(ast, node)  int_gap_rep(ast, node, gap)  int_gap_set(ast, node, gap)  int_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query int nodes — doc_int","text":"ast AST object node int node gap gap node","code":""},{"path":"http://aviral.io/rastr/reference/doc_iter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query iter nodes — doc_iter","title":"Create and query iter nodes — doc_iter","text":"iter_new() instantiates new iter node. iter_type() checks node iter node. iter_<child>_get() returns <child> node iter. iter_<child>_set() sets new <child> deletes old <child>. iter_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_iter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query iter nodes — doc_iter","text":"","code":"iter_new(ast, lbkt, var, op, expr, rbkt)  iter_type(ast, node)  iter_lbkt_get(ast, node)  iter_lbkt_rep(ast, node, lbkt)  iter_lbkt_set(ast, node, lbkt)  iter_var_get(ast, node)  iter_var_rep(ast, node, var)  iter_var_set(ast, node, var)  iter_op_get(ast, node)  iter_op_rep(ast, node, op)  iter_op_set(ast, node, op)  iter_expr_get(ast, node)  iter_expr_rep(ast, node, expr)  iter_expr_set(ast, node, expr)  iter_rbkt_get(ast, node)  iter_rbkt_rep(ast, node, rbkt)  iter_rbkt_set(ast, node, rbkt)"},{"path":"http://aviral.io/rastr/reference/doc_iter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query iter nodes — doc_iter","text":"ast AST object lbkt lbkt node var var node op op node expr expr node rbkt rbkt node node iter node","code":""},{"path":"http://aviral.io/rastr/reference/doc_lgl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query lgl nodes — doc_lgl","title":"Create and query lgl nodes — doc_lgl","text":"lgl_new() instantiates new lgl node. lgl_type() checks node lgl node. lgl_<child>_get() returns <child> node lgl. lgl_<child>_set() sets new <child> deletes old <child>. lgl_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_lgl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query lgl nodes — doc_lgl","text":"","code":"lgl_type(ast, node)  lgl_val_get(ast, node)  lgl_gap_get(ast, node)  lgl_gap_rep(ast, node, gap)  lgl_gap_set(ast, node, gap)  lgl_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_lgl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query lgl nodes — doc_lgl","text":"ast AST object node lgl node gap gap node","code":""},{"path":"http://aviral.io/rastr/reference/doc_loc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query loc nodes — doc_loc","title":"Create and query loc nodes — doc_loc","text":"loc_new() instantiates new loc node. loc_type() checks node loc node. loc_<child>_get() returns <child> node loc. loc_<child>_set() sets new <child> deletes old <child>. loc_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_loc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query loc nodes — doc_loc","text":"","code":"loc_type(ast, node)  loc_lrow_get(ast, node)  loc_lcol_get(ast, node)  loc_lchr_get(ast, node)  loc_lbyte_get(ast, node)  loc_rrow_get(ast, node)  loc_rcol_get(ast, node)  loc_rchr_get(ast, node)  loc_rbyte_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_loc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query loc nodes — doc_loc","text":"ast AST object node loc node","code":""},{"path":"http://aviral.io/rastr/reference/doc_msng.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query msng nodes — doc_msng","title":"Create and query msng nodes — doc_msng","text":"msng_new() instantiates new msng node. msng_type() checks node msng node. msng_<child>_get() returns <child> node msng. msng_<child>_set() sets new <child> deletes old <child>. msng_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_msng.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query msng nodes — doc_msng","text":"","code":"msng_new(ast, gap, loc)  msng_type(ast, node)  msng_gap_get(ast, node)  msng_gap_rep(ast, node, gap)  msng_gap_set(ast, node, gap)  msng_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_msng.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query msng nodes — doc_msng","text":"ast AST object gap gap node node msng node","code":""},{"path":"http://aviral.io/rastr/reference/doc_narg.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query narg nodes — doc_narg","title":"Create and query narg nodes — doc_narg","text":"narg_new() instantiates new narg node. narg_type() checks node narg node. narg_<child>_get() returns <child> node narg. narg_<child>_set() sets new <child> deletes old <child>. narg_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_narg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query narg nodes — doc_narg","text":"","code":"narg_new(ast, name, op, expr)  narg_type(ast, node)  narg_name_get(ast, node)  narg_name_rep(ast, node, name)  narg_name_set(ast, node, name)  narg_op_get(ast, node)  narg_op_rep(ast, node, op)  narg_op_set(ast, node, op)  narg_expr_get(ast, node)  narg_expr_rep(ast, node, expr)  narg_expr_set(ast, node, expr)"},{"path":"http://aviral.io/rastr/reference/doc_narg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query narg nodes — doc_narg","text":"ast AST object name name node op op node expr expr node node narg node","code":""},{"path":"http://aviral.io/rastr/reference/doc_ndpar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query ndpar nodes — doc_ndpar","title":"Create and query ndpar nodes — doc_ndpar","text":"ndpar_new() instantiates new ndpar node. ndpar_type() checks node ndpar node. ndpar_<child>_get() returns <child> node ndpar. ndpar_<child>_set() sets new <child> deletes old <child>. ndpar_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_ndpar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query ndpar nodes — doc_ndpar","text":"","code":"ndpar_new(ast, name)  ndpar_type(ast, node)  ndpar_name_get(ast, node)  ndpar_name_rep(ast, node, name)  ndpar_name_set(ast, node, name)"},{"path":"http://aviral.io/rastr/reference/doc_ndpar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query ndpar nodes — doc_ndpar","text":"ast AST object name name node node ndpar node","code":""},{"path":"http://aviral.io/rastr/reference/doc_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query null nodes — doc_null","title":"Create and query null nodes — doc_null","text":"null_new() instantiates new null node. null_type() checks node null node. null_<child>_get() returns <child> node null. null_<child>_set() sets new <child> deletes old <child>. null_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query null nodes — doc_null","text":"","code":"null_new(ast, gap, loc)  null_type(ast, node)  null_gap_get(ast, node)  null_gap_rep(ast, node, gap)  null_gap_set(ast, node, gap)  null_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query null nodes — doc_null","text":"ast AST object gap gap node node null node","code":""},{"path":"http://aviral.io/rastr/reference/doc_nuop.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query nuop nodes — doc_nuop","title":"Create and query nuop nodes — doc_nuop","text":"nuop_new() instantiates new nuop node. nuop_type() checks node nuop node. nuop_<child>_get() returns <child> node nuop. nuop_<child>_set() sets new <child> deletes old <child>. nuop_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_nuop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query nuop nodes — doc_nuop","text":"","code":"nuop_new(ast, op)  nuop_type(ast, node)  nuop_op_get(ast, node)  nuop_op_rep(ast, node, op)  nuop_op_set(ast, node, op)"},{"path":"http://aviral.io/rastr/reference/doc_nuop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query nuop nodes — doc_nuop","text":"ast AST object op op node node nuop node","code":""},{"path":"http://aviral.io/rastr/reference/doc_op.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query op nodes — doc_op","title":"Create and query op nodes — doc_op","text":"op_new() instantiates new op node. op_type() checks node op node. op_<child>_get() returns <child> node op. op_<child>_set() sets new <child> deletes old <child>. op_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_op.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query op nodes — doc_op","text":"","code":"op_type(ast, node)  op_gap_get(ast, node)  op_gap_rep(ast, node, gap)  op_gap_set(ast, node, gap)  op_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_op.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query op nodes — doc_op","text":"ast AST object node op node gap gap node","code":""},{"path":"http://aviral.io/rastr/reference/doc_parg.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query parg nodes — doc_parg","title":"Create and query parg nodes — doc_parg","text":"parg_new() instantiates new parg node. parg_type() checks node parg node. parg_<child>_get() returns <child> node parg. parg_<child>_set() sets new <child> deletes old <child>. parg_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_parg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query parg nodes — doc_parg","text":"","code":"parg_new(ast, expr)  parg_type(ast, node)  parg_expr_get(ast, node)  parg_expr_rep(ast, node, expr)  parg_expr_set(ast, node, expr)"},{"path":"http://aviral.io/rastr/reference/doc_parg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query parg nodes — doc_parg","text":"ast AST object expr expr node node parg node","code":""},{"path":"http://aviral.io/rastr/reference/doc_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query pars nodes — doc_pars","title":"Create and query pars nodes — doc_pars","text":"pars_new() instantiates new pars node. pars_type() checks node pars node. pars_seq_get() returns child nodes list. pars_get() returns node position index. pars_set() sets node position index deletes previous node. pars_rep() sets node position index returns previous node. pars_ins() inserts nodes starting position index.","code":""},{"path":"http://aviral.io/rastr/reference/doc_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query pars nodes — doc_pars","text":"","code":"pars_new(ast, seq)  pars_type(ast, node)  pars_len_get(ast, node)  pars_seq_get(ast, node)  pars_get(ast, node, index)  pars_rep(ast, node, index, par)  pars_par_set(ast, node, index, par)  pars_ins(ast, node, index, seq)"},{"path":"http://aviral.io/rastr/reference/doc_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query pars nodes — doc_pars","text":"ast AST object seq list child nodes node pars node index one-based index pars node","code":""},{"path":"http://aviral.io/rastr/reference/doc_pgm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query pgm nodes — doc_pgm","title":"Create and query pgm nodes — doc_pgm","text":"pgm_new() instantiates new pgm node. pgm_type() checks node pgm node. pgm_<child>_get() returns <child> node pgm. pgm_<child>_set() sets new <child> deletes old <child>. pgm_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_pgm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query pgm nodes — doc_pgm","text":"","code":"pgm_new(ast, beg, exprs, end)  pgm_type(ast, node)  pgm_beg_get(ast, node)  pgm_beg_rep(ast, node, beg)  pgm_beg_set(ast, node, beg)  pgm_exprs_get(ast, node)  pgm_exprs_rep(ast, node, exprs)  pgm_exprs_set(ast, node, exprs)  pgm_end_get(ast, node)  pgm_end_rep(ast, node, end)  pgm_end_set(ast, node, end)"},{"path":"http://aviral.io/rastr/reference/doc_pgm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query pgm nodes — doc_pgm","text":"ast AST object beg beg node exprs exprs node end end node node pgm node","code":""},{"path":"http://aviral.io/rastr/reference/doc_rlp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query rlp nodes — doc_rlp","title":"Create and query rlp nodes — doc_rlp","text":"rlp_new() instantiates new rlp node. rlp_type() checks node rlp node. rlp_<child>_get() returns <child> node rlp. rlp_<child>_set() sets new <child> deletes old <child>. rlp_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_rlp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query rlp nodes — doc_rlp","text":"","code":"rlp_new(ast, op, body)  rlp_type(ast, node)  rlp_op_get(ast, node)  rlp_op_rep(ast, node, op)  rlp_op_set(ast, node, op)  rlp_body_get(ast, node)  rlp_body_rep(ast, node, body)  rlp_body_set(ast, node, body)"},{"path":"http://aviral.io/rastr/reference/doc_rlp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query rlp nodes — doc_rlp","text":"ast AST object op op node body body node node rlp node","code":""},{"path":"http://aviral.io/rastr/reference/doc_sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query sub nodes — doc_sub","title":"Create and query sub nodes — doc_sub","text":"sub_new() instantiates new sub node. sub_type() checks node sub node. sub_<child>_get() returns <child> node sub. sub_<child>_set() sets new <child> deletes old <child>. sub_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query sub nodes — doc_sub","text":"","code":"sub_new(ast, obj, lbkt, args, rbkt)  sub_type(ast, node)  sub_obj_get(ast, node)  sub_obj_rep(ast, node, obj)  sub_obj_set(ast, node, obj)  sub_lbkt_get(ast, node)  sub_lbkt_rep(ast, node, lbkt)  sub_lbkt_set(ast, node, lbkt)  sub_args_get(ast, node)  sub_args_rep(ast, node, args)  sub_args_set(ast, node, args)  sub_rbkt_get(ast, node)  sub_rbkt_rep(ast, node, rbkt)  sub_rbkt_set(ast, node, rbkt)"},{"path":"http://aviral.io/rastr/reference/doc_sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query sub nodes — doc_sub","text":"ast AST object obj obj node lbkt lbkt node args args node rbkt rbkt node node sub node","code":""},{"path":"http://aviral.io/rastr/reference/doc_sym.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query sym nodes — doc_sym","title":"Create and query sym nodes — doc_sym","text":"sym_new() instantiates new sym node. sym_type() checks node sym node. sym_<child>_get() returns <child> node sym. sym_<child>_set() sets new <child> deletes old <child>. sym_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_sym.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query sym nodes — doc_sym","text":"","code":"sym_type(ast, node)  sym_syn_get(ast, node)  sym_val_get(ast, node)  sym_gap_get(ast, node)  sym_gap_rep(ast, node, gap)  sym_gap_set(ast, node, gap)  sym_loc_get(ast, node)"},{"path":"http://aviral.io/rastr/reference/doc_sym.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query sym nodes — doc_sym","text":"ast AST object node sym node gap gap node","code":""},{"path":"http://aviral.io/rastr/reference/doc_unop.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query unop nodes — doc_unop","title":"Create and query unop nodes — doc_unop","text":"unop_new() instantiates new unop node. unop_type() checks node unop node. unop_<child>_get() returns <child> node unop. unop_<child>_set() sets new <child> deletes old <child>. unop_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_unop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query unop nodes — doc_unop","text":"","code":"unop_new(ast, op, expr)  unop_type(ast, node)  unop_op_get(ast, node)  unop_op_rep(ast, node, op)  unop_op_set(ast, node, op)  unop_expr_get(ast, node)  unop_expr_rep(ast, node, expr)  unop_expr_set(ast, node, expr)"},{"path":"http://aviral.io/rastr/reference/doc_unop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query unop nodes — doc_unop","text":"ast AST object op op node expr expr node node unop node","code":""},{"path":"http://aviral.io/rastr/reference/doc_wlp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and query wlp nodes — doc_wlp","title":"Create and query wlp nodes — doc_wlp","text":"wlp_new() instantiates new wlp node. wlp_type() checks node wlp node. wlp_<child>_get() returns <child> node wlp. wlp_<child>_set() sets new <child> deletes old <child>. wlp_<child>_rep() sets new <child> returns old <child>.","code":""},{"path":"http://aviral.io/rastr/reference/doc_wlp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and query wlp nodes — doc_wlp","text":"","code":"wlp_new(ast, op, cond, body)  wlp_type(ast, node)  wlp_op_get(ast, node)  wlp_op_rep(ast, node, op)  wlp_op_set(ast, node, op)  wlp_cond_get(ast, node)  wlp_cond_rep(ast, node, cond)  wlp_cond_set(ast, node, cond)  wlp_body_get(ast, node)  wlp_body_rep(ast, node, body)  wlp_body_set(ast, node, body)"},{"path":"http://aviral.io/rastr/reference/doc_wlp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and query wlp nodes — doc_wlp","text":"ast AST object op op node cond cond node body body node node wlp node","code":""},{"path":"http://aviral.io/rastr/reference/parse.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse and Unparse AST — parse","title":"Parse and Unparse AST — parse","text":"parse_str() parses AST R string parse_file() parses AST file unparse_str() unparses AST R string unparse_file() unparses AST file","code":""},{"path":"http://aviral.io/rastr/reference/parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse and Unparse AST — parse","text":"","code":"parse_str(str)  parse_file(file)  unparse_str(ast, node = ast_root_get(ast))  unparse_file(ast, node = ast_root_get(ast), file)"},{"path":"http://aviral.io/rastr/reference/parse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse and Unparse AST — parse","text":"str scalar string parsed file File parsed ast AST object node Node unparsed; defaults AST root node","code":""},{"path":"http://aviral.io/rastr/reference/sugr.html","id":null,"dir":"Reference","previous_headings":"","what":"Desugar AST — sugr","title":"Desugar AST — sugr","text":"desugar() Desugars AST -place well-formed R syntax","code":""},{"path":"http://aviral.io/rastr/reference/sugr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Desugar AST — sugr","text":"","code":"desugar(ast, node = ast_root_get(ast), strictness = TRUE)"},{"path":"http://aviral.io/rastr/reference/sugr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Desugar AST — sugr","text":"ast AST object node starting node desugaring; defaults AST root","code":""}]
